doctype html
html
    include includes/head.pug
    body.logged_in
        div.members-menu
            transition(name='members-menu-toggle')
                div(v-show='visible' v-cloak)
                    h3 Members
                    ul(v-show='!listEmpty')
                        li(v-for='(member, index) in membersInRoom' v-cloak)
                            span {{ member }}
                            button(v-on:click='removeMember(member)' v-show="isAdmin") remove
                    div(v-show='listEmpty')
                        p there are no users in this group :(
                    div(v-if='isAdmin')
                        h3 ban users
                        form(onsubmit='return false' v-on:submit='banUser')
                            input(type='text' placeholder='username' v-model='banUserInput')
                            input(type='submit' value='ban')
                        h3 View banned users
                            button(v-on:click='loadBannedUsers') Load
                        ul(v-show='bannedUsers.length != 0')
                            li(v-for='(user, index) in bannedUsers') {{ user }}
                                button(v-on:click='unban(user)') unban
                        p(v-show='bannedUsers.length == 0 && bannedUsersLoaded') no user banned
        div.error_msg_box#errorMsg
            div.error_msg(v-for="(message, index) in messages" v-cloak)
                transition(name='error_msg')
                    p {{ message }}
        header
            h1= header
            h3= displayName
            h4
                a(href='/settings') settings
            h4
                a(href='/logout')  logout
        aside
            div#chatList
                div.title-box
                    h3 Friends
                    i.material-icons(v-on:click='addUserToggled = !addUserToggled') add
                    form.add-friend-form(onsubmit="return false" v-on:submit="sendFriendRequest" v-show='addUserToggled' v-cloak)
                        input(type="text" v-model="friend" placeholder="username" ref="email")
                        input(type="submit" value="add")
                ul
                    li(v-for="(friend, index) in friends" v-cloak)
                        div.item-content(v-bind:class="{ active: currRoom == friend.id}")
                            span(v-on:click='selectDm(index)' v-cloak) {{ friend.displayName }}
                            span
                                span(v-show='!friend.haveNoticedMsgs' v-cloak) {{ friend.unNoticedMsgs }}
                                i.material-icons.user-settings-icon(v-on:click='toggleMenu(index,true)'  v-bind:class="{ 'icon-toggle': friend.dropDownToggled }" v-cloak) keyboard_arrow_up
                        transition(name='friend-menu-toggle')
                            div.friend-menu.dropdown-menu(v-show='friend.dropDownToggled')
                                p {{ friend.name }}
                                button(v-on:click='removeFriend(index)') remove
                div.title-box
                    h3 Rooms
                    i.material-icons(v-on:click='roomMenuToggled = !roomMenuToggled') add
                    div.roomMenu(v-show='roomMenuToggled' v-cloak)
                        h4 join room
                        form(onsubmit='return false' v-on:submit='joinRoom')
                            input(type='text' v-model='joinRoomInput' placeholder='Room name')
                            input(type='submit' value='Join Room')
                        h4 create room
                        form(onsubmit='return false' v-on:submit='createRoom')
                            input(type='text' v-model='createRoomInput' placeholder='Room name')
                            input(type='submit' value='Create Room')
                ul
                    li(v-for="(room, index) in rooms")
                        div.item-content(v-bind:class="{ active: currRoom == room.name}")
                            span(v-on:click='selectChat(index)' v-cloak) {{ room.name }}
                            span
                                span(v-show='!room.haveNoticedMsgs' v-cloak) {{ room.unNoticedMsgs }}
                                i.material-icons.user-settings-icon(v-on:click='toggleMenu(index,false)' v-bind:class="{ 'icon-toggle': room.dropDownToggled }" v-cloak) keyboard_arrow_up
                        transition(name='room-menu-toggle')
                            div.room-menu.dropdown-menu(v-show='room.dropDownToggled')
                                p Users online: 3
                                //button(v-on:click='getInviteLink(index)') copy invite link
                                button(v-on:click='showInviteLink(index)') Invite link
                                button(v-on:click='muteRoom(room)' v-if='room.isMuted') unMute
                                button(v-on:click='muteRoom(room)' v-else) Mute
                                button(v-on:click='showMembers(index)' v-if='room.name != "default" && room.name != "memes"') Members
                                button(v-on:click='leaveRoom(room.name)' v-if='room.name != "default" && room.name != "memes"') Leave Room
            div#friend_requests(v-cloak)
                h3(v-bind:class="{'hidden': frh(ifr)}") Friend requests
                ul
                    li(v-for="(request,index) in ifr")
                        span {{ request }}
                        button(v-on:click='confirmFriendRequest(index)') add
                h3(v-bind:class="{'hidden': frh(sfr)}") Pending friend requests
                ul
                    li(v-for="(request,index) in sfr")
                        span {{ request }}
                        button(v-on:click="cfr(index)") cancel
        section.chatWindow
            div#chatMessages.chatMessages
                    div(v-for="(message, index) in messages" v-bind:class="[ {'consecutive': isConsecutive(message,index)}, message.user ]" class="message" v-cloak)
                        img(v-bind:src="imgSrc(message.sender)" alt="Profile Picture" :class='message.user')
                        span {{ message.message }}
            form(id="messageForm" onsubmit="return false" v-on:submit="sendMessage" class="chat_input_form")
                input(type="text" v-model="message" class="text_input" autofocus)
                input(type="submit" value="send" class="button")
        include includes/bottom.pug
